src_ip = ["172.31.0.3"]

pcap_file = "/opt/ntf/pcap-samples/network-token-sample.pcap"

p_up::PcapSource(
  filename=pcap_file, src_ip=src_ip, reverse=False)

p_down::PcapSource(
  filename=pcap_file, src_ip=src_ip, reverse=True)

ntf_up::NTF()
ntf_down::NTF()

ntf_up.table_create(dpid=1, max_entries=5)
ntf_up.entry_create(dpid=1,entry_id=1,dscp=1,token={'app_id':0x10001,'encryption_key':'{"alg":"A128CBC-HS256","k":"Qr_XwDGctna3SlR88rEJYt6Zm100SASYeJWSJihDnsA","key_ops":["encrypt","decrypt"],"kty":"oct"}'})

encap_up::GenericEncap(fields=[
  {'size': 6, 'value': {'value_int': 0x020000000001}},
  {'size': 6, 'value': {'value_int': 0x0619cafebeef}},
  {'size': 2, 'value': {'value_int': 0x0800}}
])

encap_down::GenericEncap(fields=[
  {'size': 6, 'value': {'value_int': 0x0619cafebeef}},
  {'size': 6, 'value': {'value_int': 0x020000000001}},
  {'size': 2, 'value': {'value_int': 0x0800}}
])

s_up::Sink()
s_down::Sink()

p_up -> ntf_up -> encap_up -> s_up

p_down -> ntf_down -> encap_down -> s_down

open('/tmp/uplink.pcap','w').close()
open('/tmp/uplink_s.pcap','w').close()
open('/tmp/downlink.pcap','w').close()
open('/tmp/downlink_s.pcap','w').close()
bess.tcpdump_gate(True, 'test', "encap_up", gate=0, direction="out", fifo="/tmp/uplink.pcap")
bess.tcpdump_gate(True, 'test', "encap_down", gate=0, direction="out", fifo="/tmp/downlink.pcap")
bess.tcpdump_gate(True, 'test', "p_up", gate=0, direction="out", fifo="/tmp/uplink_s.pcap")
bess.tcpdump_gate(True, 'test', "p_down", gate=0, direction="out", fifo="/tmp/downlink_s.pcap")
